AutoGen Definitions dummy;
class = {
  cp-id     = 'class_s_i4844';
  cp-name   = 'SI4844';
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_b1_1gacd7984bdca51c53082ab0a67b00244aa';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'audioMute';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'value';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '378';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Mutes the audio output.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
\iline 843 

@param value value 0 = normal (no mute); 1 = Right side mute; 2; Left side mute; 3 = both side 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_b1_1gad45a8797518a831c0320edb9fe9ec1d1';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'bassTrebleDown';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '376';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Less treble, more bass.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_b1_1ga374db2d27ad97a0a59ebbc6255ea5707';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'bassTrebleUp';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '375';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
More treble, less bass.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_b1_1ga184362ec07964aaf36d27304437fac08';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'changeVolume';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
char
_EnD_oF_dEf_TeXt_;
        sec-mem-param-defname = 'command';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '370';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Up or down the sound volume level.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 \xrefitem deprecated 1.\iline 663 

@param command '+' up and '-' down 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___t_o_o_l_s_1ga1abfca870fe9a1feae6e8d56f7af37be';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'convertToChar';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'value';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'strValue';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'len';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'dot';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'separator';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'remove_leading_zeros';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
true
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '576';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Converts a number to a char array.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 It is useful to mitigate memory space used by functions like sprintf or other generic similar functions
\ilinebr\ilinebr You can use it to format frequency using decimal or thousand separator and also to convert small numbers.

@param value  value to be converted
@param strValue char array that will be receive the converted value
@param len final string size (in bytes)
@param dot the decimal or thousand separator position
@param separator symbol "." or ","
@param remove_leading_zeros if true removes up to two leading zeros (default is true)
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_b1_1gacd42a278c3304a591d80ae7ab351b87a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'debugDevice';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'resetPin';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'interruptPin';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'defaultBand';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void(*)(char *msg)
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'showFunc';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '365';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Used to debug  <br>
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 use this function instead setup to check your implementation

@param resetPin          same call setup;
@param interruptPin      same call setup    <br>
@param defaultBand       same call setup  <br>
@param showFunc          function of your sketch that will be called to show something
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4844_8cpp_1ga1d119d683bed417b108ef1ccf3a2d20c';
        sec-mem-ref-line = '965';
        sec-mem-ref-name = 'getFirmware';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4844_8cpp_1ga683a81897fe79e6909817aab36622684';
        sec-mem-ref-line = '362';
        sec-mem-ref-name = 'reset';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___t_o_o_l_s_1ga66d670fc742b379c642316daf7df9bca';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'detectDevice';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '575';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Checks communication with SI4844 via I2C.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 Checks if the SI4844 is available on the I2C bus. Remember that the SI4844 responds to the address 0x11
@return  true or false
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_b1_1ga844135282d9d5d7ae5e735ecb70aa5dc';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
si4844_status_response *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getAllReceiverInfo';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '405';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Gets all current information  of the receiver (tune freq, band, and others information, status of the device).
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 Use this method only if you want to deal with that information by yourself. 
\ilinebr\ilinebr all data of the receiver is storted in "all_receiver_status" member variable 
\ilinebr\ilinebr This library has other methods to get that information easier. 
@return pointer to a structure type si4844_status_response
_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4844_8cpp_1ga0404927e7414a32125e32ff508bd450e';
        sec-mem-ref-line = '993';
        sec-mem-ref-name = 'getFrequency';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4844_8cpp_1ga0eafb7b0438fb9e70c91d368929c6aed';
        sec-mem-ref-line = '1039';
        sec-mem-ref-name = 'getFrequencyInteger';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4844_8cpp_1ga7b7d5a9c3005db4a246ed7a585b94889';
        sec-mem-ref-line = '939';
        sec-mem-ref-name = 'getValidBandIndex';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4844_8cpp_1ga1b9e216739cd952c14c08815f492b723';
        sec-mem-ref-line = '1099';
        sec-mem-ref-name = 'hasBandChanged';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4844_8cpp_1ga7264a6caa7626678daef61d8f908d612';
        sec-mem-ref-line = '925';
        sec-mem-ref-name = 'isHostDetectionBandConfig';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4844_8cpp_1gad91399d31b91e1b078d8f52a0cec4656';
        sec-mem-ref-line = '468';
        sec-mem-ref-name = 'setBand';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4844_8cpp_1ga11e6a2a47bb6ac3864f8c97c012c4e47';
        sec-mem-ref-line = '511';
        sec-mem-ref-name = 'setBandSlideSwitch';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4844_8cpp_1ga5c766d254b0c261a93dfd817f11b712c';
        sec-mem-ref-line = '567';
        sec-mem-ref-name = 'setCustomBand';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_b1_1ga97b111334d8e6ac08db8c500945c15a8';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getBandMode';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '449';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get the Band Mode.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@return char*   "FM", "AM" or "SW"
@see getStatusBandMode()
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4844_1ae12799224df69da4204f6fc1d75649b7';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getBassTreble';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '377';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___b_f_1gaca88698cca086f09f23d29734132bfec';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getCommandResponse';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'response_size';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'response';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '361';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Returns with the command response.  <br>
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 After a command is executed by the device, you can get the result (response) of the command by calling this method.

@see sendCommand, setProperty

@param response_size  num of bytes returned by the command.
@param response  byte array where the response will be stored.     <br>
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_b1_1ga9abadece84dee04770b0800dea8a3b70';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getCurrentBand';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '432';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Gets the latest band set by the microcontroller.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 It can be used as a feature to detect if the current band has been changed via Slide
@return latest band
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___b_f_1ga28ec82cb2fd02a0422e8ef3858e5ddcb';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getDataStatusInterruptFromDevice';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '355';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get the Data Status From Device.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 It returns true when the device has triggered an interrupt. 
@return true or false
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_b1_1ga1d119d683bed417b108ef1ccf3a2d20c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
si4844_firmware_response *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getFirmware';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '406';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get part number, chip revision, firmware, patch, and component revision numbers.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 You do not need to call this method. It is executed just once at setup methos. 
\ilinebr\ilinebr There are other methods that give you that information.   <br>

@see  Si48XX ATDD PROGRAMMING GUIDE; AN610;  page 22 

@return a pointer to a structure type  wirh the part number, chip revision, 
        firmware revision, patch revision, and component revision numbers.
_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4844_8cpp_1gacd42a278c3304a591d80ae7ab351b87a';
        sec-mem-ref-line = '319';
        sec-mem-ref-name = 'debugDevice';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4844_8cpp_1ga11a97916ce91dfb5ad6f49e5156219b1';
        sec-mem-ref-line = '254';
        sec-mem-ref-name = 'setup';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4844_1a4a1426b64c33c34bbdab5f994fba7b5f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getFirmwareChipRevision';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '569';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4844_1a0522080cd810f935f081526427bdaba4';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getFirmwareComponentMajorRevision';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '567';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4844_1aa17906d6a04472a7a675bc455d6e3cb9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getFirmwareComponentMinorRevision';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '568';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4844_1a1f59b7d87dd413f1ae0b2fe14ed951c0';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getFirmwareCTS';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '563';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4844_1a4cfaa0bb4654b07e1bff346bf137f213';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getFirmwareErr';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '562';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4844_1aa4c0e85a00d4fba0b1f9533f8040c1e1';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getFirmwareMajorRevision';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '565';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4844_1a5ffed2d0e9ea37c2d823322491e82d8b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getFirmwareMinorRevision';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '566';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4844_1aada13c283d6450faf9f8c1b05dd86ca9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getFirmwarePartNumber';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '564';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4844_1af727aa9c1860b88825fb7254fdf9eabb';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getFirmwareReserved';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '561';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___t_o_o_l_s_1ga168919a06150d7ceb185d8293b1c6eeb';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getFormattedFrequency';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'removeRightDigit';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
0
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'thousandsSeparator';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
','
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '577';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Gets Formatted Frequency.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 Gets the currente frequency of the receiver and return a point to char (string) with the formatted frequency 
@param removeRightDigit number of less significant digits to be removed (FM mode only)
@return  point to char with the formatted current frequency
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_b1_1ga0404927e7414a32125e32ff508bd450e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getFrequency';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '420';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get the current frequency of the radio in KHz.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 For example: FM, 103900 KHz (103.9 MHz); SW, 7335 KHz (7.34 MHz, 41m)   <br>

@return float current frequency in KHz.  <br>
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4844_8cpp_1ga844135282d9d5d7ae5e735ecb70aa5dc';
        sec-mem-ref-line = '894';
        sec-mem-ref-name = 'getAllReceiverInfo';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_b1_1ga0eafb7b0438fb9e70c91d368929c6aed';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getFrequencyInteger';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '421';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get the current frequency of the radio in KHz in uint32_t (long integer) .
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 For example: FM, 103900 KHz (103.9 MHz); SW, 7335 KHz (7.34 MHz, 41m)   <br>
\ilinebr\ilinebr It is useful to save memory

@return uint32_t current frequency in KHz.  <br>
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4844_8cpp_1ga844135282d9d5d7ae5e735ecb70aa5dc';
        sec-mem-ref-line = '894';
        sec-mem-ref-name = 'getAllReceiverInfo';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___b_f_1gaf4b90cf2e7a654718e2c65de5def0928';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getProperty';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'propertyNumber';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '359';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Gets a given property from the SI4844.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
\iline 75 

\ilinebr\ilinebr This method is used to get a given property from SI47XX
\ilinebr\ilinebr You might need to extract set of bits information from the returned value to know the real value

@param propertyNumber property number (example: RX_VOLUME)
@return property value  (the content of the property)
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_b1_1gaa25f66f4d68dbc14101ee159e6271cdd';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getRawChannelFrequency';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '538';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Gets the Channel Frequency.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 The channel frequency is a 16-bit word of 4 digits in BCD format:
\ilinebr\ilinebr FM 0640..1090 (64.0–109.0 MHz)
\ilinebr\ilinebr AM 0504..1750 (504–1750 kHz)
\ilinebr\ilinebr SW4 *0230..2850 (2.3– 28.5 MHz)
\ilinebr\ilinebr For FM band, if the China TV channel audio sub-carrier display feature is enabled, the CHFREQ bit[15] MSB = 1 means the host controller needs to add an additional 50 kHz for the channel frequency. 
\ilinebr\ilinebr For SW band, the CHFREQ bit[15] MSB = 1 means the host controller needs to add an additional 5 kHz for the channel frequency.
@return 0 = Tune info not ready yet; 1 = Tune info ready 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_b1_1ga3ddc72e37495309f61cfce89b4bce24d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
si4844_device_status *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getStatus';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '404';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Gets current status of the device.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 Use this method only if you want to deal with the current status by yourself. 
\ilinebr\ilinebr the status is stored in "device_status" member variable
\ilinebr\ilinebr this method updates the first byte of all_receiver_status member variable
@return  pointer to a structure type si4844_device_status
_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4844_8cpp_1gaed9e80832b8f991bdce9235eae3a069c';
        sec-mem-ref-line = '188';
        sec-mem-ref-name = 'setupSlideSwitch';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_b1_1ga33cd94c52839dc76bb020d0ed2a296c5';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getStatusBandIndex';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '554';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Gets the current Band Index Detected.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@return 0~19: FM band; 20~24: AM band; 25~40: SW band
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_b1_1ga2532681efe63c1b7e50847338d218159';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getStatusBandMode';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '547';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Gets the current Band Mode.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@return 0 = FM mode; 1 = AM mode; 2 = SW mode
@see getBandMode()
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_b1_1ga1107f15e0f83e4d4f1746086cfd94deb';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getStatusBCFG0';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '467';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Gets Band CFG0 (Band Detection Configuration).
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 0 = ATDD device detects band; 1 = Host detects band
\ilinebr\ilinebr <strong>Call getStatus or getAllReceiverInfo before calling this function</strong> 
@return 0 = ATDD device detects band; 1 = Host detects band
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_b1_1gac64e61270ae4b824f5ebdd5deb7b9547';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getStatusBCFG1';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '475';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Gets Band CFG1 (Band Properties Priority)
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 <strong>Call getStatus or getAllReceiverInfo before calling this function</strong> 
@return 0 = ATDD device accepts host customized band properties; 1 = ATDD device ignores host customized band properties
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4844_1a327a9bf91658360a7d25d5daa7b1ae7f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getStatusCTS';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '558';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_b1_1gac423142ab4a94dc2533aea51beb14432';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getStatusInformationReady';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '506';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Gets Information Ready.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 During power up case, the system controller should not display any of the channel frequency, band mode, band index,
\ilinebr\ilinebr station, or stereo statuses until the INFORDY bit is set.
\ilinebr\ilinebr The host controller should not display the channel frequency when CHFREQ remains zero even when INFORDY=1.
\ilinebr\ilinebr 0 = Tune info not ready yet; 1 = Tune info ready (i.e., Band mode, band index, channel frequency, sta-tion, and stereo indicators)
\ilinebr\ilinebr <strong>Call getStatus or getAllReceiverInfo before calling this function</strong> 
@return 0 = Tune info not ready yet; 1 = Tune info ready 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_b1_1ga3705f4855d249db7a66b9170f09378cb';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getStatusStationIndicator';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '494';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Gets Station Indicator.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 <strong>Call getStatus or getAllReceiverInfo before calling this function</strong> 
@return 0 = Invalid Station; 1 = Valid Station
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_b1_1ga83569342288b86972da112ea14f45095';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getStatusStereo';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '485';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Gets Stereo indicator.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 Applicable to Si4840/44 parts FM function only (id does not make sense for Si4827).
\ilinebr\ilinebr <strong>Call getStatus or getAllReceiverInfo before calling this function</strong>  <br>
@return 0 = Stereo off; 1 = Stereo on
@see getStereoIndicator()
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_b1_1ga89c7f1e6d9aad81e7260f5acea9b0f9c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getStereoIndicator';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '458';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get the Stereo Indicator.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 <strong>Call getStatus or getAllReceiverInfo before calling this function</strong>    <br>
@return char* "ON" or "OFF" 
@see getStatusStereo()
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_b1_1ga7b7d5a9c3005db4a246ed7a585b94889';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getValidBandIndex';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '409';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Retrieves the current valid BAND INDEX.  <br>
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 Waits until INFORDY is set to 1.  <br>
\ilinebr\ilinebr Once INFORDY is 1, the host can read and display the current status, including band mode, station, and stereo states.  <br>
@return  The current valid BANDIDX.  <br>
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4844_8cpp_1ga844135282d9d5d7ae5e735ecb70aa5dc';
        sec-mem-ref-line = '894';
        sec-mem-ref-name = 'getAllReceiverInfo';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_b1_1ga35aa33472f9d23986457ce7850b8175f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getVolume';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '440';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Gets the current audio volume level.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
\iline 436 

@return Volume level 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_b1_1ga44f5b3d8746dc30922cc92e778e98f16';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getVolumeProperty';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '441';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Gets the current volume value stored in SI4844 device.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 Use getVolume instead. 
@return byte 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_b1_1ga1b9e216739cd952c14c08815f492b723';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'hasBandChanged';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '423';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Checks whether the current band detected by the device changed.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 When the Slide Switch is moved by the user, the system have to process it

 @return True if the user moved the Slide Switch
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4844_8cpp_1ga844135282d9d5d7ae5e735ecb70aa5dc';
        sec-mem-ref-line = '894';
        sec-mem-ref-name = 'getAllReceiverInfo';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_b1_1gae362404004bde2ed561a0c34604e0254';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'hasStatusChanged';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '422';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Checks whether the SI4844 has its status changed.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 Actually it checks if the device triggered an external interruption due to some internal event. 
\ilinebr\ilinebr For example: If you move the tuner, the status of the device is changed. 

 @return true or false  <br>
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_b1_1ga7264a6caa7626678daef61d8f908d612';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'isHostDetectionBandConfig';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '408';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Band CFG0 (Band Detection Configuration)
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 The ATDD device has two operating modes of band detection configuration options: 
\ilinebr\ilinebr either the ATDD device detects the band or the system controller detects and controls 
\ilinebr\ilinebr the band by its own mechanism. 
\ilinebr\ilinebr For the ATDD device, the BAND pin of the device must be connected to the band switch resistor.

@return false = ATDD device detects band; True = Host detects band
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4844_8cpp_1ga844135282d9d5d7ae5e735ecb70aa5dc';
        sec-mem-ref-line = '894';
        sec-mem-ref-name = 'getAllReceiverInfo';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_b1_1ga30bf0c52c481bd7a8dd3181f683bc330';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'needHostPowerUp';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '515';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Checks Host Power Up Status.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 if True, the system needs to Power Up the device 
\ilinebr\ilinebr <strong>Call getStatus or getAllReceiverInfo before calling this function</strong>  <br>
@return True: issue the ATDD_POWER_UP command with the valid band index detected. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_b1_1ga459050d4620103194d5079edde1d98ff';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'needHostReset';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '524';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Checks HOST Reset Status  <br>
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 Check if the host (microcontroler) needs to reset the device.
\ilinebr\ilinebr <strong>Call getStatus or getAllReceiverInfo before calling this function</strong>      <br>
@return  True or False.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_b1_1gaff14988c6be8a5fb9d1a5e6934dcff47';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'powerDown';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '417';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Power the device down.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 Moves the SI4844 device from power up to power down mode. 
@see Si48XX ATDD PROGRAMMING GUIDE; AN610; page 45
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_b1_1gab19b2ce04e07e23275fea5889b87a201';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'powerUp';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '418';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Power the device up.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 \xrefitem todo 2.\ilinebr\ilinebr Moves the SI4844 device from power down to power up 
@see Si48XX ATDD PROGRAMMING GUIDE; AN610; page 45
_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4844_8cpp_1gaed9e80832b8f991bdce9235eae3a069c';
        sec-mem-ref-line = '188';
        sec-mem-ref-name = 'setupSlideSwitch';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_b1_1ga683a81897fe79e6909817aab36622684';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'reset';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '366';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Resets the SI4844 device.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 Prepares the system  to be started.
@see pages 7, 8, 9 and 10 of the programming guide.
_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4844_8cpp_1gacd42a278c3304a591d80ae7ab351b87a';
        sec-mem-ref-line = '319';
        sec-mem-ref-name = 'debugDevice';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4844_8cpp_1gad91399d31b91e1b078d8f52a0cec4656';
        sec-mem-ref-line = '468';
        sec-mem-ref-name = 'setBand';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4844_8cpp_1ga11e6a2a47bb6ac3864f8c97c012c4e47';
        sec-mem-ref-line = '511';
        sec-mem-ref-name = 'setBandSlideSwitch';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4844_8cpp_1ga5c766d254b0c261a93dfd817f11b712c';
        sec-mem-ref-line = '567';
        sec-mem-ref-name = 'setCustomBand';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4844_8cpp_1ga11a97916ce91dfb5ad6f49e5156219b1';
        sec-mem-ref-line = '254';
        sec-mem-ref-name = 'setup';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4844_8cpp_1gaed9e80832b8f991bdce9235eae3a069c';
        sec-mem-ref-line = '188';
        sec-mem-ref-name = 'setupSlideSwitch';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_b1_1ga2f14c89d348c5e3214615258b8f9c918';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'resetStatus';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '424';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
set the interrupr status to false. It will turn true after next interrupr  <br>
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___t_o_o_l_s_1gab400fccf4b3c381c8ee8c060b56eef1b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'scanI2CBus';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'device';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'limit';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '574';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Scans the I2C bus and returns the addresses of the devices found.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 Searches for devices connected to the I2C bus. The addresses of the devices found are stored in the "device" array.
@param device array of device addresses found.
@return uint8_t number of devices found or 0 if no device found or error.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___b_f_1ga8b2c96a6126110589a403751ec12631c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'sendCommand';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'cmd';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'parameter_size';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const uint8_t *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'parameter';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '360';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Sends a given command to the SI4844 device.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 This function can be useful when you want to execute a SI4844 device command and it was not implemented by this library.
\ilinebr\ilinebr Also, you need to work with bit operators to compose the parameters of the command [ &(and), ˆ(xor), |(or) etc ].   <br>

@see getCommandResponse, setProperty, getProperty

@param cmd command number (see PROGRAMMING GUIDE)
@param parameter_size Parameter size in bytes. Tell the number of argument used by the command.
@param parameter uint16_t  byte array with the arguments of the command  <br>
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_b1_1ga013c13629b964df2f0023dd0cfee5dfc';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setAmSoftMuteMaxAttenuation';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'value';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '381';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Sets AM Soft Mute Max Attenuation..  <br>
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 Maximum attenuation to apply when in soft mute. Specified in units of dB. Default maximum attenuation is 16 dB.
\ilinebr\ilinebr Set to 0 to disable soft mute. Valid range: 0 - 63. 
@param value  number between 0 and 63
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_b1_1gaf37ee2371cb5c22fca70002c6a70aaee';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setAmSoftMuteRate';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'value';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '387';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Sets the attack and decay rates when entering or leaving soft mute.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 The value specified is multiplied by 4.35 dB/s to come up with the actual attack rate. The CTS bit is set when it is safe to send the next command.
\ilinebr\ilinebr This property may only be set or read when in power up mode. The default rate is 278 dB/s.
\ilinebr\ilinebr Determines how quickly the AM goes into soft mute when soft mute is enabled. The actual rate is calculated by taking the value written to the field
\ilinebr\ilinebr and multiplying it with 4.35 dB/s. The default rate is 278 dB/s (SMRATE[15:0] = 0x0040).
\ilinebr\ilinebr Default: 0x0040; Actual Rate: SMRATE x 4.35; Units: dB/s

@param value  1–255
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_b1_1ga7f2b539247499f7b5b2e9292b89eab09';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setAmSoftMuteSlope';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'value';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '388';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Configures attenuation slope during soft mute in dB attenuation per dB SNR below the soft mute SNR threshold.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 Soft mute attenuation is the minimum of SMSLOPE x (SMTHR – SNR) and SMATTN. The recommended SMSLOPE value is CEILING(SMATTN/SMTHR).
\ilinebr\ilinebr SMATTN and SMTHR are set via the AM_SOFT_MUTE_MAX_ATTENUATION and AM_SOFT_MUTE_SNR_THRESHOLD properties. The CTS bit is
\ilinebr\ilinebr set when it is safe to send the next command. This property may only be set or read when in power up mode. The
\ilinebr\ilinebr default slope is 2 dB/dB. Default: 0x0001 Units: dB/dB

@param value  1–5
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_b1_1ga24e79008d80f6344d849dc8011e36b87';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setAmSoftMuteSnrThreshold';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'value';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '389';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Sets the SNR threshold to engage soft mute.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 Whenever the SNR for a tuned frequency drops below this threshold the AM reception will go in soft mute, provided soft mute max attenuation property is non-zero. The CTS bit is set when it is safe to send the next command. 
\ilinebr\ilinebr This property may only be set or read when in power up mode. The default SNR threshold is 8.
\ilinebr\ilinebr Default: 0x0008; Units: dB; 

@param value   0–63
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_b1_1gadb6affba868c9c99f44918e5a48a423d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
si4844_audiomode_status_response
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setAudioMode';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'audiomode';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'fm_mono';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'adjpt_attn';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'adjpt_steo';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'opcode';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '402';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Set audio mode.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
\iline 787 

@see Si48XX ATDD PROGRAMMING GUIDE; AN610; page 21

@param byte audio_mode 
            0 = Digital volume mode (no bass/treble effect, volume levels from 0 to 63) 
            1 = Bass/treble mode (no digital volume control, fixed volume level at 59)
            2 = Mixed mode 1 (bass/treble and digital volume coexist, max volume = 59) 
            3 = Mixed mode 2 (bass/treble and digital volume coexist, max volume = 63) 
            Default is 3 (Mixed mode 2).
@param byte fm_mono
            0 = Stereo audio output (default)
            1 = Mono audio output
@param byte adjpt_attn Audio attention of adjacent tune wheel positions of a station
            0 = {–2 dB, -0dB, –2 dB} i.e., adjacent points volume levels –2 dB (default) 
            1 = {–0 dB, -0dB, –0 dB} i.e., adjacent points same volume levels
@param byte adjpt_steo
            0 = Adjacent points allow stereo separation and stereo indicator on (default) 
            1 = Adjacent points disable stereo separation and stereo indicator are off
@param byte opcode 
            0 = Set audio mode and settings
            1 = Get current audio mode and settings without setting
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_b1_1gaede56f3b80857296a85ba4613bc87459';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setAudioMute';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'on';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '379';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Mutes the audio output.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
\iline 854 

@param bool on false = normal (no mute); true = mute 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_b1_1gad91399d31b91e1b078d8f52a0cec4656';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setBand';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'newBand';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
0
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '367';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Sets a new band to the device.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 This method is used to select a band 

@see See Table 8. Pre-defined Band Table in Si48XX ATDD PROGRAMMING GUIDE; AN610; pages 17 and 18  <br>

@param new_band  band number. 
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4844_8cpp_1ga844135282d9d5d7ae5e735ecb70aa5dc';
        sec-mem-ref-line = '894';
        sec-mem-ref-name = 'getAllReceiverInfo';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4844_8cpp_1ga683a81897fe79e6909817aab36622684';
        sec-mem-ref-line = '362';
        sec-mem-ref-name = 'reset';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_b1_1ga11e6a2a47bb6ac3864f8c97c012c4e47';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setBandSlideSwitch';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '368';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Sets a new band to the device configured as Slide Switch.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 \xrefitem todo 3.@see See Table 8. Pre-defined Band Table in Si48XX ATDD PROGRAMMING GUIDE; AN610; pages 17 and 18  <br>
@param band  band index number. 
@see Si4822/26/27/40/44 A NTENNA , SCHEMATIC , LAYOUT, AND DESIGN GUIDELINES 
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4844_8cpp_1ga844135282d9d5d7ae5e735ecb70aa5dc';
        sec-mem-ref-line = '894';
        sec-mem-ref-name = 'getAllReceiverInfo';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4844_8cpp_1ga683a81897fe79e6909817aab36622684';
        sec-mem-ref-line = '362';
        sec-mem-ref-name = 'reset';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = '_s_i4844_8cpp_1gaed9e80832b8f991bdce9235eae3a069c';
        sec-mem-ref-line = '188';
        sec-mem-ref-name = 'setupSlideSwitch';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_b1_1ga4323a4cd070b75d84e7fc0a5ea7c8f41';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setBassTreble';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'bass_treble';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '374';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Set the sound volume level, bass and treble.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
\iline 741 

<table class="markdownTable">
  <tr class="markdownTableHead">    <th class="markdownTableHeadNone"> bass_treble \ilinebr </th>    <th class="markdownTableHeadNone"> Description \ilinebr </th>  </tr>
<tr class="markdownTableRowOdd">    <td class="markdownTableBodyNone"> 0 \ilinebr </td>    <td class="markdownTableBodyNone"> Bass boost +4 (max) \ilinebr </td>  </tr>
<tr class="markdownTableRowEven">    <td class="markdownTableBodyNone"> 1 \ilinebr </td>    <td class="markdownTableBodyNone"> Bass boost +3 \ilinebr </td>  </tr>
<tr class="markdownTableRowOdd">    <td class="markdownTableBodyNone"> 2 \ilinebr </td>    <td class="markdownTableBodyNone"> Bass boost +2 \ilinebr </td>  </tr>
<tr class="markdownTableRowEven">    <td class="markdownTableBodyNone"> 3 \ilinebr </td>    <td class="markdownTableBodyNone"> Bass boost +1 (min) \ilinebr </td>  </tr>
<tr class="markdownTableRowOdd">    <td class="markdownTableBodyNone"> 4 \ilinebr </td>    <td class="markdownTableBodyNone"> Normal (No Bass/Treble effect) (Default) 5- Treble boost +1 (min) \ilinebr </td>  </tr>
<tr class="markdownTableRowEven">    <td class="markdownTableBodyNone"> 6 \ilinebr </td>    <td class="markdownTableBodyNone"> Treble boost +2 \ilinebr </td>  </tr>
<tr class="markdownTableRowOdd">    <td class="markdownTableBodyNone"> 7 \ilinebr </td>    <td class="markdownTableBodyNone"> Treble boost +3 \ilinebr </td>  </tr>
<tr class="markdownTableRowEven">    <td class="markdownTableBodyNone"> 8 \ilinebr </td>    <td class="markdownTableBodyNone"> Treble boost +4 (max) \ilinebr </td>  </tr></table>

@see Si48XX ATDD PROGRAMMING GUIDE; AN610; pages 29, 35, 65 and 67

@param bass_treble bass and treble (domain: 0 to 8). See table above
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_b1_1ga536d522d459a7ac501182708f9ecab9d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setBlendThresholdStereoIndicator';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'value';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '392';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Sets the blend threshold for stereo indicator.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 The CTS bit is set when it is safe to send the next command. This property may only be set or read when in powerup mode.
\ilinebr\ilinebr The default value is band dependent (either 0x9F or 0xB2)
\ilinebr\ilinebr Default: 0x009F or 0x00B2 (Band dependent)
@param value  0–0xFF
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_b1_1gab97f73b03943a4c0f4dbb3f0741d7263';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setCrystalOscillatorEnable';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'XOSCEN';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '394';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Sets Crystal Oscillator Enable.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 0 = Use external RCLK (crystal oscillator disabled).
\ilinebr\ilinebr 1 = Use crystal oscillator (XTALI and XTALO with external 32.768 kHz crystal).
\ilinebr\ilinebr See the SI48XX Data Sheet Application Schematic for external BOM details.
@see See Table 8. Pre-defined Band Table in Si48XX ATDD PROGRAMMING GUIDE; AN610; pages 17 and 18  <br>

@param XOSCEN  1 = Enable (XTALI and XTALO with external 32.768 kHz crystal)
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_b1_1gab4e3126da78b0c95cd889dcd20144382';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setCrystalOscillatorStabilizationWaitTime';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'XOWAIT';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '395';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Sets Crystal Oscillator Stabilization Wait Time After Reset.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 0 = 600 ms (for typical crystal)
\ilinebr\ilinebr 1 = 900 ms (for crystal requiring extra stabilization time)
\ilinebr\ilinebr Note: Applicable to Si4822/26/40/44A parts only. Later Si4827/44B parts don’t care this bit and will wait till crystal oscillation is stable unconditionally.
@see See Table 8. Pre-defined Band Table in Si48XX ATDD PROGRAMMING GUIDE; AN610; pages 17 and 18  <br>

@param XOSCEN  1 = Enable (XTALI and XTALO with external 32.768 kHz crystal)
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_b1_1ga5c766d254b0c261a93dfd817f11b712c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setCustomBand';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'bandIndex';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'botton';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'top';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'bandSpace';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'dfband';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
0
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'uni_am';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
0
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'tvreq';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
0
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '413';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
This method allows you to customize the frequency range of a band.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 The SI4844 can work from 2.3–28.5 MHz on SW, 64.0–109.0MHz on FM
\ilinebr\ilinebr You can configure the band index 40, for example, to work between 27 to 28 MHz.

@see Si48XX ATDD PROGRAMMING GUIDE, pages 17, 18, 19 and 20.

(top – button)/(bandSpace) must be betwenn 50 and 230

@param bandIndes Predefined band index (valid values: betwenn 0 and 40)
@param button Band Bottom Frequency Limit
@param top Band Top Frequency Limit
@param bandSpace Channel Spacing (use 5 or 10 - On FM 10 = 100KHz)
@param dfband Default Band Settings; 0 = Allow host controller to override the band property settings; 1 = Force to use tuner default band property settings (Applicable to Si4827 part only)
@param uni_am Universal AM Band. 0 = Disable universal AM band (default AFC range of 1.1 kHz); 1 = Enable universal AM band (wider AFC range in tuning); Applicable to Si4827 and Si4844B parts and AMRX mode only
@param tvreq TV Audio Channel Frequency Display; 0 = Disable TV audio channel frequency display format; 1 = Enable TV audio channel frequency display format; Applicable to Si4827 and Si4844B parts and FMRX mode only
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4844_8cpp_1ga844135282d9d5d7ae5e735ecb70aa5dc';
        sec-mem-ref-line = '894';
        sec-mem-ref-name = 'getAllReceiverInfo';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4844_8cpp_1ga683a81897fe79e6909817aab36622684';
        sec-mem-ref-line = '362';
        sec-mem-ref-name = 'reset';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_s_i4844_1ac9a028b4b22255afa30f008a3777695d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setDefaultBandIndx';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'bandidx';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '415';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_b1_1ga184028717d17cde7ef9993ab967afef5';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setFmDeemphasis';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'value';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '383';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Sets de-emphasis time constant.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 Sets the FM Receive de-emphasis to 50 or 75 μs. Default is 75 μs.

@param value  1 = 50 μs. Used in Europe, Australia, Japan, China; 2 = 75 μs. Used in USA
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_b1_1gad5698ef9798d03188738f89dc7940050';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setFmSoftMuteMaxAttenuation';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'value';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '382';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
FM Soft Mute Maximum Attenuation.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 Maximum attenuation to apply when in soft mute. Specified in units of dB. Default maximum attenuation is 16 dB.
\ilinebr\ilinebr Set to 0 to disable soft mute. Valid range: 0 - 31. 
@param value  number between 0 and 31
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_b1_1ga1e96b962e2e344b1eadeba33cd4bc813';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setFmSoftMuteRate';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'value';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '384';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Sets the attack and decay rates when entering and leaving soft mute.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 Later values increase rates, and lower values decrease rates. 
\ilinebr\ilinebr The CTS is set when it is safe to send the next command. This property may only be set or read when in powerup mode. The default is 64.

@param value  1—255 (default 64)
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_b1_1ga26ac2207be432e5c4587793b3f8b4904';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setFmSoftMuteSlope';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'value';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '385';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Configures attenuation slope during soft mute in dB attenuation per dB SNR below the soft mute SNR threshold.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 Soft mute attenuation is the minimum of SMSLOPE x (SMTHR – SNR) and SMATTN.
\ilinebr\ilinebr The recommended SMSLOPE value is CEILING(SMATTN/SMTHR). SMATTN and SMTHR are set via the FM_SOFT_MUTE_MAX_ATTENUATION and FM_SOFT_MUTE_SNR_THRESHOLD properties.
\ilinebr\ilinebr The CTS bit is set when it is safe to send the next command. This property may only be set or read when in power up mode.

@param value  0–63 (default 2)
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___b_f_1gadc433bd70a07984f8df9d6b79b5cd8b5';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setInterruptPin';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'interruptPin';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '572';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Sets the MCU Interrupt pin.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param MCU pin (example Arduino Nano: 2 - The Arduino digital pin 2 allows external interrupt)
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___b_f_1gac080ba62ed2de41f80c1fe08135362a3';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setProperty';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'propertyNumber';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'parameter';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '358';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Sends (sets) property to the SI48XX.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
\iline 47 

\ilinebr\ilinebr This method is used for others to send generic properties and params to SI4844

@param propertyNumber property number (example: RX_VOLUME)
@param parameter   property value that will be seted
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_b1_1ga43fab184f53c1f8191f769167934bfd1';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setReferenceClockFrequency';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'value';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '396';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Sets the frequency of the REFCLK from the output of the prescaler.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 The REFCLK range is 31130 to 34406 Hz (32768 ±5% Hz) in 1 Hz steps, or 0 (to disable AFC).
\ilinebr\ilinebr For example, an reference clock at XTALI pin of 13 MHz would require a prescaler value of 400 to divide it to 32500 Hz REFCLK.
\ilinebr\ilinebr The reference clock frequency property would then need to be set to 32500 Hz. Reference clock frequencies between 31130 Hz and 40 MHz are supported, however, there are gaps in frequency coverage for prescaler values ranging from 1 to 10, or frequencies up to 311300 Hz.
@param value  31130-34406 (default 32768)
@see SI48XX ATDD Programming Guide (AN610) page 26.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_b1_1gae0618088d11ae5e79193672554e39dad';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setReferenceClockPrescaler';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'value';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '397';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Sets the number used by the prescaler to divide the external reference clock frequency down to the internal REFCLK.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 The range may be between 1 and 4095 in 1 unit steps. For example, an XTALI reference clock of 13 MHz would require a prescaler value of 400 to divide it to 3250 Hz. 
\ilinebr\ilinebr The reference clock frequency property would then need to be set to 32500 Hz. The reference clock must be valid 10 ns before the chip reset signal. In addition, the reference clock must be valid at all times for proper tuning and AFC operations. 
\ilinebr\ilinebr XTALI reference clock input frequency could be changed but is not recommended and REFCLK properties values need to be reconfigured accordingly.
\ilinebr\ilinebr Prescaler for Reference Clock is an integer number used to divide clock frequency down to REFCLK frequency. The allowed REFCLK frequency range is between 31130 and 34406 Hz (32768 5%), or 0 (to disable AFC).
@param value 1-4095 (default 1)
@see SI48XX ATDD Programming Guide (AN610) page 27.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___b_f_1gab8dd1a10df601b5d99c29d879a2720e7';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setResetPin';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'resetPin';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '571';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Sets the MCU RESET pin.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param MCU pin (example Arduino Nano: 12 - Digital pin 12)
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___b_f_1ga1a00037a2cedbe25d1d53716a1c20c00';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setStatusInterruptFromDevice';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'value';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '347';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Set the Data Status From Device.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 It is a flag that means the device triggered an interrupt.
\ilinebr\ilinebr You can use this function to back the flag status to false. This way you can check when the device triggers the next interrupt.
\ilinebr\ilinebr It is very useful when the user wants to control the interrupt instead of give this control to the library. 
@param value true or false
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_b1_1ga11a97916ce91dfb5ad6f49e5156219b1';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setup';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'resetPin';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'interruptPin';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int8_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'defaultBand';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
0
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'hightClockSpeed';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
50000
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '364';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Initiates the SI4844 instance and connect the device (SI4844) to Arduino.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 Calling this library should be the first thing to do to control the SI4844.
\ilinebr\ilinebr If interruptPin is -1, it means you will control interrupt in your sketch. 
\ilinebr\ilinebr In this case, you have to call interrupt_hundler() (see SI4844.h)   <br>
@param resetPin      arduino pin used to reset the device
@param interruptPin  interruprPin arduino pin used to handle interrupt 
@param defaultBand   band that the radio should start. If -1 no band is selected and you must select one after starting. Default 0 = FM.
@param hightClockSpeed hight I2C clock speed to be used by the system (optional - default 50000 - 50kHz).
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4844_8cpp_1ga1d119d683bed417b108ef1ccf3a2d20c';
        sec-mem-ref-line = '965';
        sec-mem-ref-name = 'getFirmware';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4844_8cpp_1ga683a81897fe79e6909817aab36622684';
        sec-mem-ref-line = '362';
        sec-mem-ref-name = 'reset';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_b1_1gaed9e80832b8f991bdce9235eae3a069c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setupSlideSwitch';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'resetPin';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'interruptPin';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'hightClockSpeed';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
50000
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '363';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Initiates the SI48XX instance and connect the device (SI4844) to a microcontroller.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 \xrefitem todo 1.\ilinebr\ilinebr This function initializes the Si48XX with the "Slide Switch Selects Band" configuration, where a resistor 
\ilinebr\ilinebr network (voltage divider) is connected to the BAND pin of the device (Si4844, Si4826, or Si4827). 
\ilinebr\ilinebr While in the setup function the band control is managed by the microcontroller, the setupSlideSwitch 
\ilinebr\ilinebr function assumes that you are using a mechanical band selector.
\ilinebr\ilinebr Calling this library should be the first thing to do to control the SI48XX.
\ilinebr\ilinebr If interruptPin is -1, it means you will control interrupt in your sketch. 
\ilinebr\ilinebr In this case, you have to call interrupt_hundler() (see SI4844.h)   <br>
@param resetPin      arduino pin used to reset the device
@param interruptPin  interruprPin arduino pin used to handle interrupt 
@param hightClockSpeed hight I2C clock speed to be used by the system (optional - default 50000 - 50kHz).
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4844_8cpp_1ga3ddc72e37495309f61cfce89b4bce24d';
        sec-mem-ref-line = '875';
        sec-mem-ref-name = 'getStatus';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4844_8cpp_1gab19b2ce04e07e23275fea5889b87a201';
        sec-mem-ref-line = '405';
        sec-mem-ref-name = 'powerUp';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4844_8cpp_1ga683a81897fe79e6909817aab36622684';
        sec-mem-ref-line = '362';
        sec-mem-ref-name = 'reset';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = '_s_i4844_8cpp_1ga11e6a2a47bb6ac3864f8c97c012c4e47';
        sec-mem-ref-line = '511';
        sec-mem-ref-name = 'setBandSlideSwitch';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_b1_1ga65eab6c860e3e11c5d3726144dd3b73d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setVolume';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
        sec-mem-param-defname = 'volumeLavel';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '373';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Sets the volume level.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 Sets a value to the audio volume.
@see Table 4, Si48XX ATDD PROGRAMMING GUIDE; AN610; page 11
@param byte volumeLevel (domain: 0 to 63) 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_b1_1gab6f68232b768a6c257940407c32be77f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'volumeDown';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '372';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Decreases the volume level.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___g_b1_1gab48b1d3c4c87d120de56d3195fa071cc';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'volumeUp';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '371';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Increases the volume level.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___b_f_1ga5b2ae6cf8a96c47b8725e6a1615e7b45';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'isClearToSend';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '325';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Checks the CTS status.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 Checks whether the device is ready to receive a new command. 
@return true 
@return false 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___b_f_1gaf2bae44844dc8879354d13aaf120cd68';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setClockHigh';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '321';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Sets I2C bus speed to hight previous defined speed.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@see setClockSpeed 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___b_f_1ga3d3d37fdaa1cd64c0bd2c6178c72c80a';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setClockLow';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '314';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Sets I2C bus speed to 10kHz.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___b_f_1ga04c0fb99909eb23825e8a3d7641b4ea9';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setClockSpeed';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'clock';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '308';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Sets hight clock speed to be used on I2C bus.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param clock (10000 = 10kHz; 50000 = 50kHz; 100000 = 100kHz ... )
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___b_f_1ga577d251d1a5ce1a7fe6ebde6f7fbc289';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'waitDetectFrequency';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '327';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Wait for the ATDD detect a valid frequency (frequency not zero).
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___b_f_1ga34c4b208e45ee1b414afe5113b98db9f';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'waitInterrupt';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '324';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Waiting for an external interrupt.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 This function is called whenever the status of ATDD (SI4844) changes. 
\ilinebr\ilinebr It can occur, for example, when you use the analog tuner.  <br>
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'group___b_f_1ga7e14f020d74ec2492070e84cb24a68c3';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'waitToSend';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '326';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Wait for the ATDD become Clear to Send.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 Waits for CTS status
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_s_i4844_1ac20a180e3526e06cca19c406225fe605';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
si4844_status_response
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'all_receiver_status';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '289';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_s_i4844_1a58f6f54e07e18c5f670f49ce37e34761';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'bandmode_table';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
= {"FM", "AM", "SW"}
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '331';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_s_i4844_1acc61a20ec7cf783a9aeb91d56be51bde';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'bassTreble';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
= 4
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '336';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_s_i4844_1a8a40ad23b4e6590fb5f8b42177dd2fbb';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint32_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'clockSpeed';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
= 50000
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '297';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_s_i4844_1a04fd8d9d4d2d2f73e8dec788573d6722';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'currentBand';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
= 0
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '293';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_s_i4844_1a294126e210765abcf6fbe0a4e085c350';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
si4844_device_status
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'device_status';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '288';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_s_i4844_1a922ebce59e4a056154d330ea0a787b6e';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
si4844_firmware_response
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'firmware_response';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '290';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_s_i4844_1abea3935145c76ebd9219c70b716058ff';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'interruptPin';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '292';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_s_i4844_1a47ce51b527758d313a36ae8c5ebc5e0b';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'resetPin';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '291';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_s_i4844_1a0478b2b7d471e5cfaeb50d82bb7b722c';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'stereo_indicator_table';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
= {"ST","MO"}
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '332';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_s_i4844_1ab6cca42de97df341fb39a156c7baaa64';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'strFormattedCurrentFrequenct';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '333';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_s_i4844_1abbfca8eaf7af6c175ac8d377ce16ccb2';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'system_error';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
= 0
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '300';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_s_i4844_1a0a5c9f81c6da154d95870ddde7552d1e';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'volume';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
= 30
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '335';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_s_i4844_1aa30829c4e06f36f1d869eeea474e0762';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'xoscen';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
= 1
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '295';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_s_i4844_1a9d9dc470101998ba81a6ba47133e1df7';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'xowait';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
= 0
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '296';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
  cp-fileline  = '283';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
SI4844 Class.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
\iline 278 

\ilinebr\ilinebr This class implements all functions to help you to control the Si4844 devices. 
_EnD_oF_dEf_TeXt_;
}; /* class */
union = {
  cp-id     = 'group___g_a1';
  cp-name   = 'SI4844_arg_band';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1a782f41e6dd13d1c3db29d10133aaf29a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'raw';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '111';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1a9e61423a58fbe0bfe35ad9e3d99ffbd3';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct SI4844_arg_band::
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'refined';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '110';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
  cp-fileline  = '95';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Configures all SI48XX parameters.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
 Represents searching for a valid frequency data type.
@see  Page 18 of the Si48XX ATDD PROGRAMMING GUIDE - AN610
_EnD_oF_dEf_TeXt_;
}; /* union */
struct = {
  cp-id     = 'group___g_a1';
  cp-name   = 'SI4844_arg_band.refined';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1a9ec7108c166633916f3c1b1f312b9115';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'BANDBOT_HIGH';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '101';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1a814194f3064c4af6117afd1ae7b9af53';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'BANDBOT_LOW';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '102';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1a37a187c87903d5145480e7a5b770ec2a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'BANDIDX';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '98';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1a475873782bee9d9e6d822ccf097ac2b3';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'BANDTOP_HIGH';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '103';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1a95907beddf55d31f8c7ea2ac25944789';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'BANDTOP_LOW';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '104';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1ad4c94ebdf64727206f5b0653d5503633';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'CHSPC';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '105';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1ab9c3545a805803eda44f41e8b0b1d045';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'DFBAND';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '107';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1abd2103035a8021942390a78a431ba0c4';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'DUMMY';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '106';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1a17572b93158c15452c828032839bcfae';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'TVFREQ';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '109';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1a53cac38237fc51fd267a7c78d4776c70';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'UNI_AM';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '108';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1a22c9aef8785be330d7e1faf88bcfd4b1';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'XOSCEN';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '100';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1a1d9e9b65840f28e0a63adde9d66e2db4';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'XOWAIT';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '99';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
  cp-fileline  = '96';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* struct */
union = {
  cp-id     = 'group___g_a1';
  cp-name   = 'si4844_arg_band_index';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1aa4c85a300124473875cb5126534ea3c8';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'raw';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '86';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1afddebb759f8b85d8bcb1256bb0c9d0d8';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct si4844_arg_band_index::
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'refined';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '85';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
  cp-fileline  = '80';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Configures band parameter.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
 Represents searching for a valid frequency data type.
@see  Page 18 of the Si48XX ATDD PROGRAMMING GUIDE - AN610
_EnD_oF_dEf_TeXt_;
}; /* union */
struct = {
  cp-id     = 'group___g_a1';
  cp-name   = 'si4844_arg_band_index.refined';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1a37a187c87903d5145480e7a5b770ec2a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'BANDIDX';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '82';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1a22c9aef8785be330d7e1faf88bcfd4b1';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'XOSCEN';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '84';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1a1d9e9b65840f28e0a63adde9d66e2db4';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'XOWAIT';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '83';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
  cp-fileline  = '81';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* struct */
union = {
  cp-id     = 'group___g_a1';
  cp-name   = 'si4844_audiomode';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1ada9ef3ac20f4819922aa89a510dbc10f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct si4844_audiomode::
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'arg1';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '233';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1a1b3bf3ecc88e2d010fafd4d70076ae42';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'raw';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '234';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
  cp-fileline  = '224';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Audio Mode.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* union */
struct = {
  cp-id     = 'group___g_a1';
  cp-name   = 'si4844_audiomode.arg1';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1ad1ebb7e9f4dcea346301d305f4833489';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ADJPT_ATTN';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '229';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1a1aa3dfe92d675084fa850b44aabccc8c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ADJPT_STEO';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '230';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1afaf623e55cfa92657ab1a9f6bc4c206e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'AUDIOMODE';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '227';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1a05bb6702f87c323d31dad58d632dff6c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'FM_MONO';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '228';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1a11bdee9fdefbd8d33a25257557bddbef';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'OPCODE';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '232';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1a942d4e37dd5607ab68e54755540d4a47';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Reserved';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '231';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
  cp-fileline  = '225';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* struct */
union = {
  cp-id     = 'group___g_a1';
  cp-name   = 'si4844_audiomode_status_response';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1a920ce348cf43defb095ad6c9d1d7b25a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'raw';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '251';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1afaa238bc157431e7a977b40c386e7d0a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct si4844_audiomode_status_response::
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'status';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '250';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
  cp-fileline  = '241';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Audio Status Response.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* union */
struct = {
  cp-id     = 'group___g_a1';
  cp-name   = 'si4844_audiomode_status_response.status';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1ad1ebb7e9f4dcea346301d305f4833489';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ADJPT_ATTN';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '245';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1a1aa3dfe92d675084fa850b44aabccc8c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ADJPT_STEO';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '246';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1afaf623e55cfa92657ab1a9f6bc4c206e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'AUDIOMODE';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '243';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1ae16433ffd3adc248f0ce2608a95c3c76';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'CTS';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '249';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1acd22bad976363fdd1bfbf6759fede482';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ERR';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '248';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1a05bb6702f87c323d31dad58d632dff6c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'FM_MONO';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '244';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1a942d4e37dd5607ab68e54755540d4a47';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Reserved';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '247';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
  cp-fileline  = '242';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* struct */
union = {
  cp-id     = 'group___g_a1';
  cp-name   = 'si4844_device_status';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1a0ea68516f18bbc66b25da58bd9797e7e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'raw';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '150';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1a98dc85597b978984219c6e4daa7d6f7f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct si4844_device_status::
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'refined';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '149';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
  cp-fileline  = '139';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Device Status (The first byte of the device ststus register)
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
 The structure below represents the first byte response got by command ATDD_GET_STATUS
@see PROGRAMMING GUIDE, pages 14 and 15
_EnD_oF_dEf_TeXt_;
}; /* union */
struct = {
  cp-id     = 'group___g_a1';
  cp-name   = 'si4844_device_status.refined';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1a5261a78ae4ddbdac319c80dbeee308b2';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'BCFG0';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '141';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1a416474ab3b793f2f62bd31d2712c0404';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'BCFG1';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '142';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1ae16433ffd3adc248f0ce2608a95c3c76';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'CTS';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '148';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1add07c35e97fa7083939134ae5a198975';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'HOSTPWRUP';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '146';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1afe6af5b1629740d386f70ac440dfd081';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'HOSTRST';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '147';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1ab85cc15163fc2abc8fdd086f07c38a3c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'INFORDY';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '145';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1aa0b67bb0a7cfbb35a3b71363059d5d80';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'STATION';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '144';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1a830dff3c27992cca35a4b46282e10530';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'STEREO';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '143';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
  cp-fileline  = '140';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'group___g_a1';
  cp-name   = 'si4844_firmware_info';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1a38dcd6fd63f9a040ba68c5266b676105';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'CHIPREV';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '208';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1a6c58e4f3caee874e9bd64dd45ec7fe1b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'CMPMAJOR';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '206';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1a3d543270b50f739debc5405a54ef4116';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'CMPMINOR';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '207';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1ace0a4304f15f347ec4723988a9e788a0';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'CTS';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '202';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1a7ea267acad0f48227da2f83aaeae435d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ERR';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '201';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1a4339bbc73cadc9361d059ae5d5fdd5f7';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'FWMAJOR';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '204';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1ad1eae282a38604cdcc0ba18ecdc66473';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'FWMINOR';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '205';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1a5dfb75c114db5f902068198b4f7634a2';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'PN';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '203';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1a813254eb8f7c2e88227154157933195e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'RESERVED';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '200';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
  cp-fileline  = '198';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Firmware Information.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
@see Si48XX ATDD PROGRAMMING GUIDE, page 22.
_EnD_oF_dEf_TeXt_;
}; /* struct */
union = {
  cp-id     = '_s_i4844_8h';
  cp-name   = 'si4844_firmware_response';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = '_s_i4844_8h_1a8942ea634be3db7275ac9fbb3cc26dd3';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'raw';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '217';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = '_s_i4844_8h_1a88c3f7f813f5e6c249de39f37793687d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
si4844_firmware_info
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'refined';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '216';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
  cp-fileline  = '215';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Firmware Response.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
\iline 212 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 2;
        node-label = 'si4844_firmware_info';
        node-link = {
          node-link-id = 'group___g_a1#structsi4844__firmware__info';
        };
      }; /* node */
      node = {
        node-id    = 1;
        node-label = 'si4844_firmware_response';
        node-link = {
          node-link-id = '_s_i4844_8h#unionsi4844__firmware__response';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
refined
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* union */
struct = {
  cp-id     = '_s_i4844_8h';
  cp-name   = 'si4844_get_channel_frequency';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = '_s_i4844_8h_1af2fdf7025c6dcb7c1c3fecc517867eb9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'CHFREQ';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '179';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = '_s_i4844_8h_1ac9d9fe6d40f952d3584f5558cca163ef';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'dummy';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '178';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
  cp-fileline  = '177';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'group___g_a1';
  cp-name   = 'si4844_get_status';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1accef4d7acfdc14530807bdc3d50b858e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'BANDIDX';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '169';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1a8b05b194c7ea1fc89fa6379f8168e738';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'BANDMODE';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '170';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1aff584d438d22709c99c17537cd4d19c2';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'BCFG0';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '161';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1a24ef7906bfcaa071dfd99c2e198920f1';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'BCFG1';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '162';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1af18d45c20fb48cb9dd8f9c8cb3095c9d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'CTS';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '168';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1a78214f521fdcea2bc5150f369013beed';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'd1';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '172';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1ad368cfe6179539e7dfd006ee324433ec';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'd2';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '171';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1a8656d167864559e12a343ddff53b6532';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'd3';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '174';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1a8f030b65865691709646e1f42272e329';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'd4';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '173';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1a414758a90fbf84493eb83e700f93359b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'HOSTPWRUP';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '166';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1a890ef3067527c2ea5cab4d9233d04ed4';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'HOSTRST';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '167';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1ae1ae8b6bb0181cbfef784799bcffdf8f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'INFORDY';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '165';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1ac4e7f2a1aca868f7a81407203f178b62';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'STATION';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '164';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1a53c1d3a240cae390999bc4c19fbdb2c5';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'STEREO';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '163';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
  cp-fileline  = '159';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
All Device Information (All Status)
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
 The structure below represents the four bytes response got by command ATDD_GET_STATUS
@see PROGRAMMING GUIDE, pages 14 and 15
_EnD_oF_dEf_TeXt_;
}; /* struct */
union = {
  cp-id     = '_s_i4844_8h';
  cp-name   = 'si4844_property';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = '_s_i4844_8h_1a598f86514f19ca1c4771afe4dc55434a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct si4844_property::
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'raw';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '264';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = '_s_i4844_8h_1a2f87d941759c895e3e1d671b56a9e444';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'value';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '265';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
  cp-fileline  = '259';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Data type to deal with SET_PROPERTY command.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
\iline 255 

\ilinebr\ilinebr Property Data type (help to deal with SET_PROPERTY command on si473X)
_EnD_oF_dEf_TeXt_;
}; /* union */
struct = {
  cp-id     = '_s_i4844_8h';
  cp-name   = 'si4844_property.raw';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = '_s_i4844_8h_1a7b280732d6c370d505d537b0ab9f7e30';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'byteHigh';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '263';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = '_s_i4844_8h_1a1f3859652867ab4a967c5caa3e2ab353';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'byteLow';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '262';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
  cp-fileline  = '260';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* struct */
union = {
  cp-id     = 'group___g_a1';
  cp-name   = 'si4844_status';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1a362f396c4c762ad401e2e5ec79cb4eac';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'raw';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '130';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1a3cc6eb5264cdf06a2d0d6b111ab787ed';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct si4844_status::
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'refined';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '129';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
  cp-fileline  = '119';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Status.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
 Represents searching for a valid frequency data type.
_EnD_oF_dEf_TeXt_;
}; /* union */
struct = {
  cp-id     = 'group___g_a1';
  cp-name   = 'si4844_status.refined';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1ae16433ffd3adc248f0ce2608a95c3c76';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'CTS';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '128';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
0 = Wait before sending next command; 1 = Clear to send next command.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1ab6e0fb7ce3da205f28974dc3b323c989';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'D_0';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '122';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1a323b515dec6e9a6563cad1790f7590bc';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'D_1';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '123';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1aa701eb15aaebdd365911d0df1da9c8f7';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'D_2';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '124';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1a75d3898b277ccd4965cf703c42b2b8b5';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'D_3';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '125';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1a0aa283b20ca498410b8cd10e5fbcd42a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'D_4';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '126';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1acd22bad976363fdd1bfbf6759fede482';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ERR';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '127';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
1 = Error.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
  cp-fileline  = '120';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* struct */
union = {
  cp-id     = 'group___g_a1';
  cp-name   = 'si4844_status_response';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1a6c85033999395aa3fabf31f13418476b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'raw';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '190';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1ad32133fd90ecf230751648cc80d2a78d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
si4844_get_channel_frequency
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'rawStatus';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '189';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'group___g_a1_1a91cf8272340013b6c5f447e7e6a17d17';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
si4844_get_status
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'refined';
      sec-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      sec-mem-desc-line = '188';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
  cp-fileline  = '187';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Status response.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
@see See Si48XX ATDD PROGRAMMING GUIDE, pages 14 and 15 
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 3;
        node-label = 'si4844_get_channel_frequency';
        node-link = {
          node-link-id = '_s_i4844_8h#structsi4844__get__channel__frequency';
        };
      }; /* node */
      node = {
        node-id    = 2;
        node-label = 'si4844_get_status';
        node-link = {
          node-link-id = 'group___g_a1#structsi4844__get__status';
        };
      }; /* node */
      node = {
        node-id    = 1;
        node-label = 'si4844_status_response';
        node-link = {
          node-link-id = 'group___g_a1#unionsi4844__status__response';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
refined
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '3';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
rawStatus
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* union */
file = {
  file-id   = '_s_i4844_8cpp';
  file-name = 'SI4844.cpp';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_s_i4844_8cpp_1ac673bec28500b111088b013029979fcc';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'interrupt_hundler';
      func-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.cpp';
      func-mem-desc-line = '38';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Library handle interrupt.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
 Handling interruptions.
\ilinebr\ilinebr This function simply captures the status change of the SI48XX via interruption.
\ilinebr\ilinebr Whenever the status of the ATDD changes, a hardware interrupt is triggered. For example, when you move the tuner
\ilinebr\ilinebr potenciometer, the ATDD sends a signal to the Arduino pin (INTERRUPT_PIN). The same is true when the ATDD is capturing 
\ilinebr\ilinebr mono FM signal and has switched to stereo. 
\ilinebr\ilinebr You can control the interrupt process via your sketch intead of this library. 
@see setStatusInterruptFromDevice, getStatusInterruptFromDevice, setup 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_s_i4844_8h';
  file-name = 'SI4844.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4844_8h_1a57030e143a5efa06b9b9cc21b63d0b70';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'AM_SOFT_MUTE_MAX_ATTENUATION';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x3302
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      define-mem-desc-line = '44';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4844_8h_1ab99cdb1908b382e8398decd8fb455fa8';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'AM_SOFT_MUTE_RATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x3300
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      define-mem-desc-line = '55';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4844_8h_1a2d531456d92913b07a7c60b9080a691a';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'AM_SOFT_MUTE_SLOPE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x3301
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      define-mem-desc-line = '56';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4844_8h_1ab089c66d524223acdad68bfd970603cc';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'AM_SOFT_MUTE_SNR_THRESHOLD';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x3303
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      define-mem-desc-line = '57';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4844_8h_1aff9a7b619bbeff035b8f6e25ae58ab24';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'ATDD_AUDIO_MODE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0xE2
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      define-mem-desc-line = '30';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4844_8h_1a70824a2c88feb88faf6f55f8a83c10cf';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'ATDD_GET_STATUS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0xE0
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      define-mem-desc-line = '34';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4844_8h_1a7aac914d9a51da255a2e19fb1f889d99';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'ATDD_POWER_DOWN';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x11
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      define-mem-desc-line = '28';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4844_8h_1a9fce44b312bbb4dbca1a0d951a0a7c8d';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'ATDD_POWER_UP';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0xE1
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      define-mem-desc-line = '29';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4844_8h_1a15334ea9808ed9e355d8bc6bb3b43fcf';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'ATDD_XOSCEN';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x80
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      define-mem-desc-line = '32';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4844_8h_1a775e42f41cc53c1f6ce0b30bfa5e6902';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'ATDD_XOWAIT';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x40
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      define-mem-desc-line = '33';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4844_8h_1a3819dacd7536c0b8e83a8570e83cf5ab';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'DEVICE_LAST_VALID_INDEX_BAND';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
40
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      define-mem-desc-line = '60';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4844_8h_1a8f62bfa609e4deb9febe3a25aae3c6bc';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'FM_BLEND_RSSI_MONO_THRESHOLD';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x1801
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      define-mem-desc-line = '50';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4844_8h_1abf0ee031cf6bb27b0211709117cfcaf0';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'FM_BLEND_RSSI_STEREO_THRESHOLD';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x1800
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      define-mem-desc-line = '49';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4844_8h_1a9fe700fb45d6e08e177da6fdc208fa05';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'FM_DEEMPHASIS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x1100
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      define-mem-desc-line = '45';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4844_8h_1a8befb9228ad41e2baa0e69411e0f5108';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'FM_SOFT_MUTE_MAX_ATTENUATION';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x1302
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      define-mem-desc-line = '43';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4844_8h_1a071a5bbf23d933861cb73987c74e9fed';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'FM_SOFT_MUTE_RATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x1300
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      define-mem-desc-line = '46';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4844_8h_1ad90847770bc9057d28c2db4975a37ab5';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'FM_SOFT_MUTE_SLOPE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x1301
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      define-mem-desc-line = '47';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4844_8h_1a5c434290c4783a19e1255ef3aae55d15';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'FM_STEREO_IND_BLEND_THRESHOLD';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x1207
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      define-mem-desc-line = '48';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4844_8h_1acf7a3971c551fcdf7ae16bb0f31c149d';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'GET_PROPERTY';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x13
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      define-mem-desc-line = '37';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4844_8h_1a9fbb31eec68a8b17895fd18640296013';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'GET_REV';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x10
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      define-mem-desc-line = '31';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4844_8h_1adb330b20b383f5f664a9b107edef0036';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'REFCLK_FREQ';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x0201
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      define-mem-desc-line = '52';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4844_8h_1a6b615b86f7870b616243b25cb5091933';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'REFCLK_PRESCALE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x0202
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      define-mem-desc-line = '53';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4844_8h_1a6f6ab2088a67fe3ae967956424b43f87';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'RX_ACTUAL_VOLUME';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x4003
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      define-mem-desc-line = '41';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4844_8h_1aebddd417b9ac0f8a00231504a40dd71d';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'RX_BASS_TREBLE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x4002
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      define-mem-desc-line = '40';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4844_8h_1a5d8cbc8d5c6630e874f1f8b14b897be2';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'RX_HARD_MUTE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x4001
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      define-mem-desc-line = '39';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4844_8h_1aeb1de40ffb7cb51cf4a151f5d1b746d7';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'RX_VOLUME';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x4000
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      define-mem-desc-line = '38';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4844_8h_1a92cfecd26935c8864d65bbdc6031acb0';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SET_PROPERTY';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x12
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      define-mem-desc-line = '36';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_s_i4844_8h_1acc6be0457e695b1458f3d016ef10faeb';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SI4844_ADDRESS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0x11
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      define-mem-desc-line = '23';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
SI4844 ARDUINO LIBRARY  <br>
_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
\iline 2 

\ilinebr\ilinebr This is an Arduino library for the SI4822, SI4826, SI4827, SI4840, 4844A, and 4844B, BROADCAST AM/FM/SW RADIO RECEIVER IC family from Silicon Labs. 
\ilinebr\ilinebr When appropriate, this documentation will use the acronym SI48XX to refer to the following devices: SI4822, SI4826, SI4827, SI4840, SI4844A, and SI4844B.
\ilinebr\ilinebr In most cases, references to the SI4844 device also apply to the other aforementioned devices.
\ilinebr\ilinebr This library is intended to provide an easier interface for controlling the SI47XX by using Arduino platform. 
\ilinebr\ilinebr The communication used by this library is I2C.
\ilinebr\ilinebr This file contains: const (#define), Defined Data type and Methods declarations
\ilinebr\ilinebr You can see a complete documentation on <https://github.com/pu2clr/SI4844>

@see https://pu2clr.github.io/SI4844/
@see Si48XX ATDD PROGRAMMING GUIDE - AN610
@see BROADCAST ANALOG TUNING DIGITAL DISPLAY AM/FM/SW RADIO RECEIVER - Si4844-B20
@see Si4822/26/27/40/44 A NTENNA , SCHEMATIC , LAYOUT, AND DESIGN GUIDELINES - AN602
@author PU2CLR - Ricardo Lima Caratti 
@date  2019-2020
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    var = {
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = '_s_i4844_8h_1adde5ba839a6d6b3db3a56c1893cf5491';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static volatile bool
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'data_from_device';
      var-mem-desc-file = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
      var-mem-desc-line = '274';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Interrupt status.
_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_
 This variable must be true every time an interruption occurs and then must return to the false every time an action resulting from the interruption is performed.
\ilinebr\ilinebr The variable below indicates a change of the ATDD status. When it occurs, it means the system needs to process some action (for example show on LCD this change).  <br>
@see interrupt_hundler() function in SI44.cpp. 
_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    };
  file-full-name  = '/Users/rcaratti/Desenvolvimento/eu/Arduino/DSP/si4844/SI4844/src/SI4844.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
